# Use an official Python runtime as a base image
FROM python:3.8.17-slim-buster

# Set the working directory in the container
WORKDIR /app

# Set environment variables
RUN addgroup python && adduser --gecos "" --disabled-password --uid=9001 --ingroup=python python
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH="." \
    PATH="${PATH}:/home/python/.local/bin"

# Install linux dependencies
RUN apt-get update \
    && apt-get install -y \
        curl \
        wget \
        dumb-init \
        gcc \
        g++ \
        libpq-dev \
        python3-dev \
        openjdk-11-jdk\
    && rm -rf /var/lib/apt/lists/* \
    && chown -R python:python /app

# # Add an argument to determine the host OS
# ARG HOST_OS

# Set a build argument to pass the host OS
ARG BUILD_OS
ENV BUILD_OS=${BUILD_OS}

# Install Rust 1.72.1 only if the host OS is macOS
RUN if [ "$BUILD_OS" = "Darwin" ]; then \
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain=1.72.1 -y; \
    fi
ENV PATH="/root/.cargo/bin:${PATH}"
ENV RUSTUP_TOOLCHAIN=1.72.1

# Install Poetry 1.8.3
RUN curl -sSL https://install.python-poetry.org | POETRY_HOME="/home/python/.local" python3 - --version 1.8.3
ENV PATH="/home/python/.poetry/bin:${PATH}"

# Install Python dependencies
COPY --chown=python:python poetry.lock pyproject.toml /app/
RUN poetry config virtualenvs.create false

# Note: run poetry install without linux group when your machine have no Nvidia GPU
RUN poetry install --no-interaction --no-ansi --without linux

# Install PyTorch directly using pip
RUN pip install torch==2.1.0 --index-url https://download.pytorch.org/whl/cpu

# Copy entrypoint file and grant privilege
COPY entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh && chown python:python /app/entrypoint.sh

# Change user and group owner
RUN chown python:python /app/