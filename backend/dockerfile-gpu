# Use an official Python runtime as a base image
FROM python:3.8.17-slim-buster

# Set the working directory in the container
WORKDIR /app

# Set environment variables
RUN addgroup python && adduser --gecos "" --disabled-password --uid=9001 --ingroup=python python
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH="." \
    PATH="${PATH}:/home/python/.local/bin"

# Install linux dependencies
RUN apt-get update \
    && apt-get install -y \
        curl \
        wget \
        dumb-init \
        gcc \
        g++ \
        libpq-dev \
        python3-dev \
        openjdk-11-jdk\
        bash \
    && rm -rf /var/lib/apt/lists/* \
    && chown -R python:python /app

# Add an argument to determine the host OS
ARG HOST_OS

# Install Rust 1.72.1 only if the host OS is macOS
RUN if [ "$HOST_OS" = "macos" ]; then \
        curl -fsSL https://raw.githubusercontent.com/kawakami-o3/rush/master/scripts/install.sh | sh; \
    fi
ENV PATH="/root/.cargo/bin:${PATH}"
ENV RUSTUP_TOOLCHAIN=1.72.1

# Install Poetry 1.8.3
RUN curl -sSL https://install.python-poetry.org | POETRY_HOME="/home/python/.local" python3 - --version 1.8.3
ENV PATH="/home/python/.poetry/bin:${PATH}"

# Install Python dependencies
COPY --chown=python:python poetry.lock pyproject.toml /app/
RUN poetry config virtualenvs.create false

# Install dependencies, including PyTorch from the specific index
RUN poetry add --lock torch=="2.1.0+cu121" --source pytorch-gpu

# Note: run poetry install
RUN poetry install --no-interaction --no-ansi

# Copy entrypoint file and grant privilege
COPY entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh && chown python:python /app/entrypoint.sh

# Change user and group owner
RUN chown python:python /app/